import Head from "next/head";
import React, { useState } from "react";
import { Layer, Map, Source } from "react-map-gl";
import DeckGL from "@deck.gl/react";
import { type GeoJSON } from "geojson";
import Points1 from "../data/points1.json";
import Points2 from "../data/points2.json";
import { LayerManagerControl } from "@/components/LayerManagerControl";
import { GeoHouse } from "../types";

const MAPBOX_TOKEN = process.env.NEXT_PUBLIC_MAPBOX_TOKEN; // Set your mapbox token here

const renderGeoJson = ({ data, color, haloColor, id }: GeoHouse) => (
  <Source type="geojson" data={data} key={id}>
    <Layer
      type="circle"
      paint={{
        "circle-radius": 6,
        "circle-color": color,
      }}
    />
    <Layer
      type="symbol"
      layout={{
        "text-field": ["get", "name"],
        "text-size": 12,
        "text-offset": [0, -1],
      }}
      paint={{
        "text-color": color,
        "text-halo-color": haloColor ?? "black",
        "text-halo-width": 1,
      }}
    />
  </Source>
);

// https://github.com/visgl/react-map-gl/tree/master/examples/geojson
function Home() {
  const [geoHouses, seGeoHouses] = useState<GeoHouse[]>([
    {
      id: 1,
      title: "图层1",
      data: Points1 as GeoJSON,
      color: "red",
      visible: true,
    },
    {
      id: 2,
      title: "图层2",
      data: Points2 as GeoJSON,
      color: "blue",
      haloColor: "white",
      visible: true,
    },
  ]);

  return (
    <>
      <Head>
        <title>MapBox</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <DeckGL
        initialViewState={{
          latitude: 22.506958,
          longitude: 113.934298,
          zoom: 11,
        }}
        controller={true}
      >
        <Map
          mapStyle="mapbox://styles/mapbox/streets-v12"
          mapboxAccessToken={MAPBOX_TOKEN}
          interactiveLayerIds={["data"]}
        >
          {geoHouses.map((gh) => gh.visible && renderGeoJson(gh))}
        </Map>
      </DeckGL>
      <LayerManagerControl
        layersVisible={geoHouses.map((gh) => gh.visible)}
        onVisibleChanged={(index, visible) => {
          seGeoHouses((prev) =>
            prev.map((v, i) => (i === index ? { ...v, visible } : v))
          );
        }}
        onLayerAdded={(data) => {
          seGeoHouses((prev) =>
            prev.concat({
              id: prev.length + 1,
              title: `图层${prev.length + 1}`,
              data,
              color: `#${Math.floor(Math.random() * 16777215).toString(16)}`,
              visible: true,
            })
          );
        }}
      />
    </>
  );
}
export default Home;
